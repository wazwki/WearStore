syntax = "proto3";

package apigatewaypb;

option go_package = "github.com/wazwki/WearStore/api-gateway/api/proto/apigatewaypb";

import "google/api/annotations.proto";
import "github.com/wazwki/WearStore/user-service/api/proto/user.proto";
import "github.com/wazwki/WearStore/product-service/api/proto/product.proto";
import "github.com/wazwki/WearStore/cart-service/api/proto/cart.proto";

service ApiGatewayService {
  // User Service
  rpc RegisterUser(userpb.RegisterUserRequest) returns (userpb.RegisterUserResponse) {
    option (google.api.http) = {
      post: "/v1/users/register"
      body: "*"
    };
  }

  rpc LoginUser(userpb.LoginUserRequest) returns (userpb.LoginUserResponse) {
    option (google.api.http) = {
      post: "/v1/users/login"
      body: "*"
    };
  }

  rpc GetUser(userpb.GetUserRequest) returns (userpb.GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  }

  rpc UpdateUser(userpb.UpdateUserRequest) returns (userpb.UpdateUserResponse) {
    option (google.api.http) = {
      put: "/v1/users/{id}"
      body: "*"
    };
  }

  rpc DeleteUser(userpb.DeleteUserRequest) returns (userpb.DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  }

  // Product Service
  rpc GetProduct(productpb.GetProductRequest) returns (productpb.GetProductResponse) {
    option (google.api.http) = {
      get: "/v1/products/{id}"
    };
  }

  rpc ListProducts(productpb.ListProductsRequest) returns (productpb.ListProductsResponse) {
    option (google.api.http) = {
      get: "/v1/products"
    };
  }

  rpc AddProduct(productpb.AddProductRequest) returns (productpb.AddProductResponse) {
    option (google.api.http) = {
      post: "/v1/products"
      body: "*"
    };
  }

  rpc UpdateProduct(productpb.UpdateProductRequest) returns (productpb.UpdateProductResponse) {
    option (google.api.http) = {
      put: "/v1/products/{id}"
      body: "*"
    };
  }

  rpc DeleteProduct(productpb.DeleteProductRequest) returns (productpb.DeleteProductResponse) {
    option (google.api.http) = {
      delete: "/v1/products/{id}"
    };
  }

  // Cart Service
  rpc AddToCart(cartpb.AddToCartRequest) returns (cartpb.AddToCartResponse) {
    option (google.api.http) = {
      post: "/v1/cart/add"
      body: "*"
    };
  }

  rpc RemoveFromCart(cartpb.RemoveFromCartRequest) returns (cartpb.RemoveFromCartResponse) {
    option (google.api.http) = {
      post: "/v1/cart/remove"
      body: "*"
    };
  }

  rpc GetCart(cartpb.GetCartRequest) returns (cartpb.GetCartResponse) {
    option (google.api.http) = {
      get: "/v1/cart/{user_id}"
    };
  }

  rpc ClearCart(cartpb.ClearCartRequest) returns (cartpb.ClearCartResponse) {
    option (google.api.http) = {
      post: "/v1/cart/clear"
      body: "*"
    };
  }

  rpc Checkout(cartpb.CheckoutRequest) returns (cartpb.CheckoutResponse) {
    option (google.api.http) = {
      post: "/v1/cart/checkout"
      body: "*"
    };
  }
}
