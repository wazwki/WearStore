version: '3.9'

services:
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "${USER_PORT}:${USER_PORT}"
      - "${USER_HTTP_PORT}:${USER_HTTP_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "${PRODUCT_PORT}:${PRODUCT_PORT}"
      - "${PRODUCT_HTTP_PORT}:${PRODUCT_HTTP_PORT}"
    env_file:
      - .env
    depends_on:
      - mongo

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    ports:
      - "${CART_PORT}:${CART_PORT}"
      - "${CART_HTTP_PORT}:${CART_HTTP_PORT}"
    env_file:
      - .env
    depends_on:
      - redis
      - user-service
      - product-service

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "${USER_DB_PORT}:${USER_DB_PORT}"
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db

volumes:
  postgres-data:
  redis-data:
  mongo-data:
